{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      showImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  var onClose = useCallback(function () {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[0].src),\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[0].src),\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[1].src),\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(images[0].src),\n    width: \"50%\",\n    onClick: onZoom\n  }), __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/components/PostImages.js"],"names":["React","useState","useCallback","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACaN,QAAQ,CAAC,KAAD,CADrB;AAAA,MACxBO,cADwB;AAAA,MACRC,iBADQ;;AAG/B,MAAMC,MAAM,GAAGR,WAAW,CAAC,YAAM;AAC7BO,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,MAAME,OAAO,GAAGT,WAAW,CAAC,YAAM;AAC9BO,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,OAAO,EAAEH;AAA7D,MADJ,EAEKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAFvB,CADJ;AAMH;;AACD,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI,mBACI;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MADJ,EAEI;AAAK,MAAA,GAAG,kCAA2BH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MAFJ,CADJ,EAKKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MALvB,CADJ;AASH;;AACD,SACI,4BACI,mBACI;AAAK,IAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,IAAA,KAAK,EAAC,KAA1D;AAAgE,IAAA,OAAO,EAAEH;AAAzE,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,aAAa,EAAE;AAA7E,KAAZ;AAAqG,IAAA,OAAO,EAAEP;AAA9G,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,EAEI,iBAFJ,EAGKH,MAAM,CAACK,MAAP,GAAgB,CAHrB,iDAFJ,CADJ,EAUKJ,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI;AAArC,IAVvB,CADJ;AAcH,CA5CD;;AA8CAL,UAAU,CAACY,SAAX,GAAuB;AACnBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACtCP,IAAAA,GAAG,EAAEV,SAAS,CAACkB;AADuB,GAAhB,CAAlB,EAEJC;AAHe,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Icon } from 'antd'\r\nimport ImagesZoom from './ImagesZoom'\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false)\r\n\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true)\r\n    }, [])\r\n\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false)\r\n    }, [])\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n            </>\r\n        )\r\n    }\r\n    if (images.length === 2) {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n                    <img src={`http://localhost:3065/${images[1].src}`} width=\"50%\" onClick={onZoom} />\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n                <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom}>\r\n                    <Icon type=\"plus\" />\r\n                    <br />\r\n                    {images.length - 1}\r\n                    개의 사진 더보기\r\n                </div>\r\n            </div>\r\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n        </>\r\n    )\r\n}\r\n\r\nPostImages.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired\r\n}\r\n\r\nexport default PostImages"]},"metadata":{},"sourceType":"module"}