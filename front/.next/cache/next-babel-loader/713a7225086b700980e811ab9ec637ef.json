{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_DUMMY = 'ADD_DUMMY';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = [...post.Comments, action.data.comment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_DUMMY","reducer","state","action","type","data","error","postIndex","findIndex","v","id","postId","post","Comments","comment"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts: [], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n}\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST'\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS'\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS'\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST'\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST'\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST'\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS'\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE'\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST'\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_DUMMY = 'ADD_DUMMY'\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Comments = [...post.Comments, action.data.comment]\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Comments}\r\n\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                commentAdded: true,\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                mainPosts: []\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                mainPosts: action.data\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}