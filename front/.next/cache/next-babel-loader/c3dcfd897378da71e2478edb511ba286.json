{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    encType: \"multipart/form-data\",\n    style: {\n      margin: '10px 0'\n    },\n    onSubmit: onSubmitForm\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uBB34\\uC2A8 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText\n  }), __jsx(\"div\", null, __jsx(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput\n  }), __jsx(Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    }\n  }, __jsx(\"img\", {\n    src: 'http://localhost:3000/' + v,\n    style: {\n      width: 200\n    },\n    alt: v\n  }), __jsx(\"div\", null, __jsx(Button, null, \"\\uC81C\\uAC70\")))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/components/PostForm.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeText","target","value","margin","imageInput","onClickImageUpload","float","map","v","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEa,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAA0CT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA3D;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAFQ,EAEN,CAACG,SAAS,KAAK,IAAf,CAFM,CAAT;AAIA,QAAMG,YAAY,GAAGjB,WAAW,CAACkB,CAAC,IAAI;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACT,IAAD,IAAS,CAACA,IAAI,CAACU,IAAL,EAAd,EAA2B;AACvB,aAAOC,KAAK,CAAC,aAAD,CAAZ;AACH;;AACDZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEf,gBADD;AAELgB,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAEd;AADP;AAFD,KAAD,CAAR;AAMH,GAX+B,EAW7B,CAACA,IAAD,CAX6B,CAAhC;AAaA,QAAMe,YAAY,GAAGzB,WAAW,CAACkB,CAAC,IAAI;AAClCP,IAAAA,OAAO,CAACO,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,qBAAd;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA3C;AAAiE,IAAA,QAAQ,EAAEX;AAA3E,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,SAAS,EAAE,GAA3B;AAAgC,IAAA,WAAW,EAAC,qDAA5C;AAA0D,IAAA,KAAK,EAAEP,IAAjE;AAAuE,IAAA,QAAQ,EAAEe;AAAjF,IADJ,EAEI,mBACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAEI;AAAxC,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC;AAAjB,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,OAAO,EAAElB;AAA7E,oBAHJ,CAFJ,EAOI,mBACKD,UAAU,CAACoB,GAAX,CAAeC,CAAC,IACb;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAApB,KACI;AAAK,IAAA,GAAG,EAAE,2BAA2BD,CAArC;AAAwC,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAA/C;AAA+D,IAAA,GAAG,EAAEF;AAApE,IADJ,EAEI,mBACI,MAAC,MAAD,uBADJ,CAFJ,CADH,CADL,CAPJ,CADJ,CADJ;AAsBH,CAhDD;;AAkDA,eAAezB,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ADD_POST_REQUEST } from '../reducers/post'\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch()\r\n    const [text, setText] = useState('')\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        setText('')\r\n    }, [postAdded === true])\r\n\r\n    const onSubmitForm = useCallback(e => {\r\n        e.preventDefault()\r\n        if (!text || !text.trim()) {\r\n            return alert('게시글을 작성하세요.')\r\n        }\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text\r\n            }\r\n        })\r\n    }, [text])\r\n\r\n    const onChangeText = useCallback(e => {\r\n        setText(e.target.value)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Form encType=\"multipart/form-data\" style={{ margin: '10px 0' }} onSubmit={onSubmitForm}>\r\n                <Input.TextArea maxLength={140} placeholder=\"무슨 일이 있었나요?\" value={text} onChange={onChangeText} />\r\n                <div>\r\n                    <Input type=\"file\" multiple hidden ref={imageInput} />\r\n                    <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                    <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n                </div>\r\n                <div>\r\n                    {imagePaths.map(v => (\r\n                        <div key={v} style={{ display: 'inline-block' }}>\r\n                            <img src={'http://localhost:3000/' + v} style={{ width: 200 }} alt={v} />\r\n                            <div>\r\n                                <Button>제거</Button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n"]},"metadata":{},"sourceType":"module"}