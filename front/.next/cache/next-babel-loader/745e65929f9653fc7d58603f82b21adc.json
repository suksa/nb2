{"ast":null,"code":"import { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginApi() {}\n\nfunction* login() {\n  try {\n    // yield call(loginApi)\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n} //////////////////////////////////////\n\n\nfunction signUpApi() {}\n\nfunction* signUp() {\n  try {\n    // yield call(signUpApi)\n    yield call(signUpApi);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/sagas/user.js"],"names":["all","fork","takeEvery","call","put","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginApi","login","type","e","console","error","watchLogin","signUpApi","signUp","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,KAA1C,QAAuD,oBAAvD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP;;AASA,SAASC,QAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOQ,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUU,UAAV,GAAuB;AACnB,QAAMhB,SAAS,CAACI,cAAD,EAAiBO,KAAjB,CAAf;AACH,C,CACD;;;AACA,SAASM,SAAT,GAAqB,CAEpB;;AAED,UAAUC,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMjB,IAAI,CAACgB,SAAD,CAAV;AACA,UAAMf,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEH,eADA;AAENM,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,WAAV,GAAwB;AACpB,QAAMnB,SAAS,CAACO,eAAD,EAAkBW,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACiB,UAAD,CADE,EAENjB,IAAI,CAACoB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeEvery, call, put, delay } from 'redux-saga/effects'\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n} from '../reducers/user'\r\n\r\nfunction loginApi() {\r\n\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        // yield call(loginApi)\r\n        yield delay(1000)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n}\r\n//////////////////////////////////////\r\nfunction signUpApi() {\r\n\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        // yield call(signUpApi)\r\n        yield call(signUpApi)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}