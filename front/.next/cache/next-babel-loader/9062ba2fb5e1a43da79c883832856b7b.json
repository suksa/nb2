{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar } from \"antd\";\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst User = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Post.length), __jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings.length), __jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers.length)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c\n  })));\n};\n\nUser.propType = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = async context => {\n  return {\n    id: _parseInt(context.query.id, 10)\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/pages/user.js"],"names":["React","useEffect","PropTypes","Card","Avatar","LOAD_USER_POSTS_REQUEST","useDispatch","useSelector","LOAD_USER_REQUEST","User","id","dispatch","mainPosts","state","post","userInfo","user","type","data","Post","length","Followings","Followers","nickname","map","c","propType","number","isRequired","getInitialProps","context","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAhC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,iBADD;AAELU,MAAAA,IAAI,EAAER;AAFD,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,uBADD;AAELa,MAAAA,IAAI,EAAER;AAFD,KAAD,CAAR;AAIH,GATQ,EASN,EATM,CAAT;AAWA,SACI,mBACKK,QAAQ,GAED,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,CACL;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEI,iBAFJ,EAGKA,QAAQ,CAACI,IAAT,CAAcC,MAHnB,CADK,EAML;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEI,iBAFJ,EAGKL,QAAQ,CAACM,UAAT,CAAoBD,MAHzB,CANK,EAWL;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEI,iBAFJ,EAGKL,QAAQ,CAACO,SAAT,CAAmBF,MAHxB,CAXK;AADb,KAmBI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD,QAASL,QAAQ,CAACQ,QAAT,CAAkB,CAAlB,CAAT,CADZ;AAEI,IAAA,KAAK,EAAER,QAAQ,CAACQ;AAFpB,IAnBJ,CAFC,GA2BH,IA5BV,EA6BKX,SAAS,CAACY,GAAV,CAAcC,CAAC,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAC,CAACf,EAAjB;AAAqB,IAAA,IAAI,EAAEe;AAA3B,IADH,CA7BL,CADJ;AAmCH,CAnDD;;AAqDAhB,IAAI,CAACiB,QAAL,GAAgB;AACZhB,EAAAA,EAAE,EAAER,SAAS,CAACyB,MAAV,CAAiBC;AADT,CAAhB;;AAIAnB,IAAI,CAACoB,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACtC,SAAO;AAAEpB,IAAAA,EAAE,EAAE,UAASoB,OAAO,CAACC,KAAR,CAAcrB,EAAvB,EAA2B,EAA3B;AAAN,GAAP;AACH,CAFD;;AAIA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, Avatar } from \"antd\";\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\n\r\n\r\nconst User = ({ id }) => {\r\n    const dispatch = useDispatch()\r\n    const { mainPosts } = useSelector(state => state.post)\r\n    const { userInfo } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_USER_REQUEST,\r\n            data: id\r\n        })\r\n        dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            data: id\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {userInfo\r\n                ? (\r\n                    <Card\r\n                        actions={[\r\n                            <div key=\"twit\">\r\n                                짹짹\r\n                                <br />\r\n                                {userInfo.Post.length}\r\n                            </div>,\r\n                            <div key=\"twit\">\r\n                                팔로잉\r\n                                <br />\r\n                                {userInfo.Followings.length}\r\n                            </div>,\r\n                            <div key=\"twit\">\r\n                                팔로워\r\n                                <br />\r\n                                {userInfo.Followers.length}\r\n                            </div>\r\n                        ]}\r\n                    >\r\n                        <Card.Meta\r\n                            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                            title={userInfo.nickname}\r\n                        />\r\n                    </Card>\r\n                )\r\n                : null}\r\n            {mainPosts.map(c => (\r\n                <PostCard key={c.id} post={c} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nUser.propType = {\r\n    id: PropTypes.number.isRequired\r\n}\r\n\r\nUser.getInitialProps = async (context) => {\r\n    return { id: parseInt(context.query.id, 10) }\r\n}\r\n\r\nexport default User"]},"metadata":{},"sourceType":"module"}