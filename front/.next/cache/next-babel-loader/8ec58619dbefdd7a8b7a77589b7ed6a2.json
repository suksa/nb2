{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\naxios.defaults.baseURL = 'http://localhost:3065/api';\n\nfunction loginApi(loginData) {\n  return axios.post('/user/login', loginData);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginApi, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n} //////////////////////////////////////\n\n\nfunction signUpApi(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signUpApi)\n    yield call(signUpApi, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/sagas/user.js"],"names":["axios","all","fork","takeEvery","call","put","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","defaults","baseURL","loginApi","loginData","post","login","action","result","data","type","e","console","error","watchLogin","signUpApi","signUpData","signUp","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP;AASAX,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AACzB,SAAOf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BD,SAA1B,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACU,QAAD,EAAWI,MAAM,CAACE,IAAlB,CAAzB;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEd,cADA;AAENa,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOE,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEb;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUiB,UAAV,GAAuB;AACnB,QAAMtB,SAAS,CAACG,cAAD,EAAiBW,KAAjB,CAAf;AACH,C,CACD;;;AACA,SAASS,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B,SAAO3B,KAAK,CAACgB,IAAN,CAAW,QAAX,EAAqBW,UAArB,CAAP;AACH;;AAED,UAAUC,MAAV,CAAiBV,MAAjB,EAAyB;AACrB,MAAI;AACA;AACA,UAAMd,IAAI,CAACsB,SAAD,EAAYR,MAAM,CAACE,IAAnB,CAAV;AACA,UAAMf,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOY,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEV,eADA;AAENa,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUO,WAAV,GAAwB;AACpB,QAAM1B,SAAS,CAACM,eAAD,EAAkBmB,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACuB,UAAD,CADE,EAENvB,IAAI,CAAC2B,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects'\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n} from '../reducers/user'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065/api'\r\n\r\nfunction loginApi(loginData) {\r\n    return axios.post('/user/login', loginData)\r\n}\r\n\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginApi, action.data)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n}\r\n//////////////////////////////////////\r\nfunction signUpApi(signUpData) {\r\n    return axios.post('/user/', signUpData)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield call(signUpApi)\r\n        yield call(signUpApi, action.data)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}