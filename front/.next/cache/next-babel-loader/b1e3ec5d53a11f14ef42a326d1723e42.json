{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\naxios.defaults.baseURL = 'http://localhost:3065/api';\n\nfunction addPostAPI(postData) {\n  return axios.post('/api/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost() {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n} /////////////////\n\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* commentSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/sagas/post.js"],"names":["axios","all","fork","takeLatest","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","defaults","baseURL","addPostAPI","postData","post","withCredentials","addPost","result","call","action","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","watchAddComment","commentSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SACIC,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,mBAJJ,EAKIC,mBALJ,EAMIC,mBANJ,QAOO,kBAPP;AASAX,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,SAAOf,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBD,QAAxB,EAAkC;AACrCE,IAAAA,eAAe,EAAE;AADoB,GAAlC,CAAP;AAGH;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMC,IAAI,CAACN,UAAD,EAAaO,MAAM,CAACC,IAApB,CAAzB;AACA,UAAMlB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAEhB,gBADA;AAENe,MAAAA,IAAI,EAAEH,MAAM,CAACG;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOE,CAAP,EAAU;AACR,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAEf,gBADA;AAENiB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAMvB,UAAU,CAACG,gBAAD,EAAmBY,OAAnB,CAAhB;AACH,C,CACD;;;AACA,SAASS,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBP,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAEb,mBADA;AAENY,MAAAA,IAAI,EAAE;AACFO,QAAAA,MAAM,EAAER,MAAM,CAACC,IAAP,CAAYO;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQE,OAAOL,CAAP,EAAU;AACR,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAEZ,mBADA;AAENc,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,eAAV,GAA4B;AACxB,QAAM3B,UAAU,CAACM,mBAAD,EAAsBmB,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUG,WAAV,GAAwB;AACnC,QAAM9B,GAAG,CAAC,CACNC,IAAI,CAACwB,YAAD,CADE,EAENxB,IAAI,CAAC4B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport { all, fork, takeLatest, put, delay } from 'redux-saga/effects'\r\nimport {\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_COMMENT_FAILURE,\r\n} from '../reducers/post'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065/api'\r\n\r\nfunction addPostAPI(postData) {\r\n    return axios.post('/api/post', postData, {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data)\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost)\r\n}\r\n/////////////////\r\nfunction addCommentAPI() {\r\n    \r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        yield delay(2000)\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId,\r\n            }\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\r\n}\r\n\r\nexport default function* commentSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}