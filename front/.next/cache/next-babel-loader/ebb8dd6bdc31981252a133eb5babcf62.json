{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const dummyUser = {\n  nickname: '조찬형',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {}\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const signUpAction = data => {\n  // action에 넣을 데이터가 동적인 경우에는 action을 함수로만듬\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport const loginAction = {\n  type: LOG_IN\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","initialState","isLoggedIn","user","LOG_IN","LOG_OUT","SIGN_UP","signUpAction","data","type","loginAction","logoutAction","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAMA,SAAS,GAAG;AACrBC,EAAAA,QAAQ,EAAE,KADW;AAErBC,EAAAA,IAAI,EAAE,EAFe;AAGrBC,EAAAA,UAAU,EAAE,EAHS;AAIrBC,EAAAA,SAAS,EAAE,EAJU;AAKrBC,EAAAA,UAAU,EAAE;AALS,CAAlB;AAQP,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAAE;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEH,OADH;AAEHE,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,WAAW,GAAG;AACvBD,EAAAA,IAAI,EAAEL;AADiB,CAApB;AAIP,OAAO,MAAMO,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEJ;AADkB,CAArB;;AAIP,MAAMO,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKL,MAAL;AAAa;AACT,iCACOS,KADP;AAEIX,UAAAA,UAAU,EAAE,IAFhB;AAGIC,UAAAA,IAAI,EAAER;AAHV;AAKH;;AACD,SAAKU,OAAL;AAAc;AACV,iCACOQ,KADP;AAEIX,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD,SAAKG,OAAL;AAAc;AACV,iCACOO,KADP;AAEIb,UAAAA,UAAU,EAAEc,MAAM,CAACN;AAFvB;AAIH;;AACD;AAAS;AACL,iCACOK,KADP;AAGH;AAzBL;AA2BH,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["export const dummyUser = {\r\n    nickname: '조찬형',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    signUpData: {}\r\n}\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: null\r\n}\r\n\r\nexport const LOG_IN = 'LOG_IN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const SIGN_UP = 'SIGN_UP'\r\n\r\nexport const signUpAction = data => { // action에 넣을 데이터가 동적인 경우에는 action을 함수로만듬\r\n    return {\r\n        type: SIGN_UP,\r\n        data: data,\r\n    }\r\n}\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n}\r\n\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: dummyUser,\r\n            }\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case SIGN_UP: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}