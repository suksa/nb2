{"ast":null,"code":"import { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nfunction loginApi() {}\n\nfunction* login() {\n  try {\n    yield call(loginApi);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nfunction* hellowSaga() {\n  console.log('hi');\n  yield 'bye';\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), hellowSaga()]);\n}","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/sagas/user.js"],"names":["all","fork","takeLatest","call","put","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginApi","login","type","e","console","error","watchLogin","hellowSaga","log","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,cAHJ,QAIO,kBAJP;;AAMA,SAASC,QAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA,UAAMN,IAAI,CAACK,QAAD,CAAV;AACA,UAAMJ,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMP,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUO,UAAV,GAAuB;AACnB,QAAMZ,UAAU,CAACG,MAAD,EAASI,KAAT,CAAhB;AACH;;AAED,UAAUM,UAAV,GAAuB;AACnBH,EAAAA,OAAO,CAACI,GAAR,CAAY,IAAZ;AACA,QAAM,KAAN;AACH;;AAED,eAAe,UAAUC,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACa,UAAD,CADE,EAENC,UAAU,EAFJ,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport {\r\n    LOG_IN,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE\r\n} from '../reducers/user'\r\n\r\nfunction loginApi() {\r\n\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginApi)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN, login)\r\n}\r\n\r\nfunction* hellowSaga() {\r\n    console.log('hi')\r\n    yield 'bye'\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        hellowSaga()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}