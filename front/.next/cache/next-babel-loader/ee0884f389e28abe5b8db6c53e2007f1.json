{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport AppLayout from '../components/AppLayout';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  // next에서 넣어주는 props\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nNodeBird.getInitialProps = function _callee(context) {\n  var ctx, Component, pageProps;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // next에서 알아서 실행해서 context를 넣어줌\n          ctx = context.ctx, Component = context.Component;\n          pageProps = {};\n\n          if (!Component.getInitialProps) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(context.Component.getInitialProps(ctx));\n\n        case 5:\n          pageProps = _context.sent;\n\n        case 6:\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/pages/_app.js"],"names":["React","Head","PropTypes","withRedux","AppLayout","createStore","compose","applyMiddleware","Provider","createSagaMiddleware","reducer","rootSaga","NodeBird","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAAE;AACpD,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED;AAAjB,KACI,MAAC,IAAD,QACI,gCADJ,EAEI;AACI,IAAA,GAAG,EAAC,YADR;AAEI,IAAA,IAAI,EAAC;AAFT,IAFJ,CADJ,EAQI,MAAC,SAAD,QACI,MAAC,SAAD,EAAeC,SAAf,CADJ,CARJ,CADJ;AAcH,CAfD;;AAiBAH,QAAQ,CAACI,SAAT,GAAqB;AACjBH,EAAAA,SAAS,EAAEX,SAAS,CAACe,WAAV,CAAsBC,UADhB;AAEjBJ,EAAAA,KAAK,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD,UAFP;AAGjBH,EAAAA,SAAS,EAAEb,SAAS,CAACiB,MAAV,CAAiBD;AAHX,CAArB;;AAMAN,QAAQ,CAACQ,eAAT,GAA2B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AACpCC,UAAAA,GADe,GACID,OADJ,CACfC,GADe,EACVT,SADU,GACIQ,OADJ,CACVR,SADU;AAEnBE,UAAAA,SAFmB,GAEP,EAFO;;AAAA,eAGnBF,SAAS,CAACO,eAHS;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAIDC,OAAO,CAACR,SAAR,CAAkBO,eAAlB,CAAkCE,GAAlC,CAJC;;AAAA;AAInBP,UAAAA,SAJmB;;AAAA;AAAA,2CAMhB;AAAEA,YAAAA,SAAS,EAATA;AAAF,WANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AASA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C,MAAMC,cAAc,GAAGjB,oBAAoB,EAA3C;AACA,MAAMkB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAG,QACbtB,OAAO,CAACC,eAAe,MAAf,SAAmBoB,WAAnB,CAAD,CADM,GAEbrB,OAAO,CACPC,eAAe,MAAf,SAAmBoB,WAAnB,CADO,EAEP,CAACF,OAAO,CAACI,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0H,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFpH,CAFX;AAMA,MAAMlB,KAAK,GAAGT,WAAW,CAACK,OAAD,EAAUc,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACO,GAAf,CAAmBtB,QAAnB;AACA,SAAOG,KAAP;AACD,CAZH;;AAcE,eAAeX,SAAS,CAACoB,cAAD,CAAT,CAA0BX,QAA1B,CAAf","sourcesContent":["import React from \"react\"\r\nimport Head from 'next/head'\r\nimport PropTypes from 'prop-types'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport AppLayout from '../components/AppLayout'\r\nimport { createStore, compose, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from '../reducers'\r\nimport rootSaga from '../sagas';\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => { // next에서 넣어주는 props\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"\r\n                />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n    pageProps: PropTypes.object.isRequired,\r\n}\r\n\r\nNodeBird.getInitialProps = async (context) => { // next에서 알아서 실행해서 context를 넣어줌\r\n    const { ctx, Component } = context\r\n    let pageProps = {}\r\n    if (Component.getInitialProps) {\r\n        pageProps = await context.Component.getInitialProps(ctx)\r\n    }\r\n    return { pageProps }\r\n}\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n      );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n  };\r\n  \r\n  export default withRedux(configureStore)(NodeBird);\r\n\r\n"]},"metadata":{},"sourceType":"module"}