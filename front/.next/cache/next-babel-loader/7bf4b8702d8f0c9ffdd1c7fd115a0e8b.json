{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\naxios.defaults.baseURL = 'http://localhost:3065/api';\n\nfunction loginApi(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true // backend와 쿠키 주고받을수있게됨\n\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //////////////////////////////////////\n\n\nfunction signUpApi(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpApi, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n} //////////////////////////////////////\n\n\nfunction logOutApi() {\n  return axios.post('/user/logout', logOutData, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(logOutApi);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context4.next = 12;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context4.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/sagas/user.js"],"names":["login","watchLogin","signUp","logOut","watchLogOut","userSaga","axios","all","fork","takeEvery","call","put","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","defaults","baseURL","loginApi","loginData","post","withCredentials","action","data","result","type","console","error","signUpApi","signUpData","logOutApi","logOutData","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","watchLoadUser","watchSignUp"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { all, fork, takeEvery, call, put } from 'redux-saga/effects'\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n} from '../reducers/user'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065/api'\r\n\r\nfunction loginApi(loginData) {\r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials: true // backend와 쿠키 주고받을수있게됨\r\n    })\r\n}\r\n\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginApi, action.data)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n}\r\n//////////////////////////////////////\r\nfunction signUpApi(signUpData) {\r\n    return axios.post('/user/', signUpData)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield call(signUpApi)\r\n        yield call(signUpApi, action.data)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n//////////////////////////////////////\r\nfunction logOutApi() {\r\n    return axios.post('/user/logout', logOutData, {\r\n        withCredentials: true\r\n    })\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // yield call(logOutApi)\r\n        yield call(logOutApi)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}