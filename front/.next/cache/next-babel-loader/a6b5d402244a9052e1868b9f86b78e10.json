{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_DUMMY = 'ADD_DUMMY';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPLOAD_IMAGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n        });\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter(function (v, i) {\n            return i !== action.index;\n          })\n        });\n      }\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Likers = [{\n          id: action.data.userId\n        }].concat(_toConsumableArray(postLikers));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Likers: Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: mainPosts\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post = state.mainPosts[_postIndex];\n\n        var _Likers = _post.Likers.filter(function (v) {\n          return v.id !== action.data.userId;\n        });\n\n        var _mainPosts = _toConsumableArray(state.mainPosts);\n\n        _mainPosts[_postIndex] = _objectSpread({}, _post, {\n          Likers: _Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var _postIndex2 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post2 = state.mainPosts[_postIndex2];\n        var Comments = [].concat(_toConsumableArray(_post2.Comments), [action.data.comment]);\n\n        var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: _mainPosts2,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        var _postIndex3 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post3 = state.mainPosts[_postIndex3];\n        var _Comments = action.data.comments;\n\n        var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n          Comments: _Comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts3\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/suksa/Desktop/code/new-react-nodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_DUMMY","reducer","state","action","type","data","filter","v","i","index","postIndex","findIndex","id","postId","post","Likers","userId","postLikers","error","Comments","comment","comments"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts: [], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n}\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST'\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS'\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS'\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST'\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST'\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST'\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS'\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE'\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST'\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_DUMMY = 'ADD_DUMMY'\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                imagePaths: [...state.imagePaths, ...action.data]\r\n            }\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case REMOVE_IMAGE: {\r\n            return {\r\n                ...state,\r\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index)\r\n            }\r\n        }\r\n        case LIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Likers = [{ id: action.data.userId}, ...postLikers]\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Likers}\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            }\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UNLIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId)\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Likers}\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            }\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n                imagePaths: [],\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Comments = [...post.Comments, action.data.comment]\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Comments}\r\n\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                commentAdded: true,\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }\r\n        }\r\n        case LOAD_COMMENTS_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = action.data.comments;\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            };\r\n          }\r\n        case LOAD_MAIN_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                mainPosts: []\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                mainPosts: action.data\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}