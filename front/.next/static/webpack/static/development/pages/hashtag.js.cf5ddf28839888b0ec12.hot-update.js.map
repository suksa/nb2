{"version":3,"file":"static/webpack/static\\development\\pages\\hashtag.js.cf5ddf28839888b0ec12.hot-update.js","sources":["webpack:///./reducers/post.js"],"sourcesContent":["export const initialState = {\r\n    mainPosts: [], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n}\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST'\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS'\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST'\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS'\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST'\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS'\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST'\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS'\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST'\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS'\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST'\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS'\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST'\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS'\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST'\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS'\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE'\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST'\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS'\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST'\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS'\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE'\r\n\r\nexport const ADD_DUMMY = 'ADD_DUMMY'\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                imagePaths: [...state.imagePaths, ...action.data]\r\n            }\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case REMOVE_IMAGE: {\r\n            return {\r\n                ...state,\r\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index)\r\n            }\r\n        }\r\n        case LIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Likers = [{ id: action.data.userId}, ...postLikers]\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Likers}\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            }\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UNLIKE_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId)\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Likers}\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            }\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n                imagePaths: [],\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId)\r\n            const post = state.mainPosts[postIndex]\r\n            const Comments = [...post.Comments, action.data.comment]\r\n            const mainPosts = [...state.mainPosts]\r\n            mainPosts[postIndex] = {...post, Comments}\r\n\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                commentAdded: true,\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }\r\n        }\r\n        case LOAD_COMMENTS_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = action.data.comments;\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n            };\r\n          }\r\n        case LOAD_MAIN_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                mainPosts: []\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                mainPosts: action.data\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AA5JA;AA8JA;AACA;AACA;;;;A","sourceRoot":""}